name: Release Obsidian Plugin

on:
  push:
    tags:
      - 'v*' # 在推送版本标签时触发

permissions:
  contents: write

jobs:
  build-and-release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: 配置环境变量
        run: |
          echo "NODE_OPTIONS=--max-old-space-size=4096" >> $GITHUB_ENV

      - name: Install dependencies
        run: npm ci

      - name: Build plugin
        run: npm run build

      - name: Verify required files
        run: |
          [ -f "main.js" ] || { echo "❌ main.js not found!"; exit 1; }
          [ -f "manifest.json" ] || { echo "❌ manifest.json not found!"; exit 1; }
          [ -f "styles.css" ] || echo "/* Empty */" > styles.css
          echo "✅ All required files verified!"

      - name: Create release package
        run: |
          VERSION=${GITHUB_REF#refs/tags/v}
          PACKAGE_NAME="obsidian-s3-bridge-${VERSION}"
          mkdir -p $PACKAGE_NAME
          cp main.js manifest.json styles.css $PACKAGE_NAME/
          zip -r "${PACKAGE_NAME}.zip" $PACKAGE_NAME/
          echo "✅ Release package created: ${PACKAGE_NAME}.zip"

      # 关键修复：使用更好的release action，确保标记为latest
      - name: Create GitHub Release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ github.ref_name }}
          name: Obsidian S3-Bridge ${{ github.ref_name }}
          artifacts: '*.zip,main.js,manifest.json,styles.css'
          makeLatest: true # 这个参数确保标记为latest!
          generateReleaseNotes: true
          body: |
            ## Obsidian S3-Bridge ${{ github.ref_name }}

            ### What's Changed
            - Automatic release from GitHub Actions
            - Version: ${{ github.ref_name }}

            ### Files Included
            - `main.js` - Main plugin file
            - `manifest.json` - Plugin configuration
            - `styles.css` - Plugin styles

            ### Installation
            1. Download the zip file
            2. Extract to your Obsidian vault plugins folder
            3. Enable the plugin in Obsidian settings

            ---
            🤖 Generated by GitHub Actions
