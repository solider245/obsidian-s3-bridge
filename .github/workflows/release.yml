name: Release Obsidian Plugin

on:
  push:
    tags:
      - 'v*'  # 在推送版本标签时触发 (例如: v1.0.0)

# 关键修复：添加权限设置
permissions:
  contents: write  # 赋予写入内容的权限，包括创建release

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    
    # 也可以在job级别设置权限
    permissions:
      contents: write  # 确保有创建release的权限
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        # 重要：需要获取tag信息
        fetch-depth: 0
        
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: 配置环境变量
      run: |
        echo "NODE_OPTIONS=--max-old-space-size=4096" >> $GITHUB_ENV
        
    - name: Install dependencies
      run: npm ci
        
    - name: Build plugin
      run: npm run build
        
    - name: Verify required files exist
      run: |
        echo "Checking for required plugin files..."
        if [ ! -f "main.js" ]; then
          echo "❌ main.js not found!"
          exit 1
        fi
        if [ ! -f "manifest.json" ]; then
          echo "❌ manifest.json not found!"
          exit 1
        fi
        if [ ! -f "styles.css" ]; then
          echo "⚠️  styles.css not found (optional but recommended)"
          # 创建一个空的styles.css如果不存在
          echo "/* Empty stylesheet */" > styles.css
        fi
        echo "✅ All required files found!"
        
    - name: Create release package
      run: |
        # 获取版本号（从tag名）
        VERSION=${GITHUB_REF#refs/tags/v}
        PACKAGE_NAME="obsidian-s3-bridge-${VERSION}"
        
        # 创建临时目录并复制文件
        mkdir -p $PACKAGE_NAME
        cp main.js manifest.json styles.css $PACKAGE_NAME/
        
        # 创建ZIP包
        zip -r "${PACKAGE_NAME}.zip" $PACKAGE_NAME/
        
        # 输出包信息
        echo "Package created: ${PACKAGE_NAME}.zip"
        ls -la *.zip
        
    - name: Create GitHub Release
      uses: softprops/action-gh-release@v2  # 确保使用v2版本
      with:
        files: |
          *.zip
          main.js
          manifest.json
          styles.css
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}