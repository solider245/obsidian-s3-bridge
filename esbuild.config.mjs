import esbuild from "esbuild";
import process from "process";
import builtins from "builtin-modules";

const banner =
`/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/
`;

const prod = (process.argv[2] === "production");

const buildOptions = {
	banner: {
		js: banner,
	},
	entryPoints: ["main.ts"],
	bundle: true,
	external: [
		"obsidian",
		"electron",
		"@codemirror/autocomplete",
		"@codemirror/collab",
		"@codemirror/commands",
		"@codemirror/language",
		"@codemirror/lint",
		"@codemirror/search",
		"@codemirror/state",
		"@codemirror/view",
		"@lezer/common",
		"@lezer/highlight",
		"@lezer/lr",
		...builtins
	],
	format: "cjs",
	target: "es2018",
	logLevel: "info",
	sourcemap: prod ? false : "inline",
	treeShaking: true,
	outfile: "main.js",
	minify: prod,
	metafile: true
};

const context = await esbuild.context(buildOptions);

if (prod) {
	const result = await context.rebuild();
	// 输出体积分析（小改动，大收益）
	try {
		const analysis = await esbuild.analyzeMetafile(result.metafile, { verbose: true });
		console.log('\n====== esbuild bundle analysis ======\n');
		console.log(analysis);
		console.log('\n=====================================\n');
	} catch (e) {
		console.warn('[build] analyzeMetafile failed:', e?.message || e);
	}
	process.exit(0);
} else {
	await context.watch();
}
